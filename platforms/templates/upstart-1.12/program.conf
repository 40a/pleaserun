description     "{{with .Description}}{{.}}{{else}}-{{end}}"
start on filesystem or runlevel [2345]
stop on runlevel [!2345]

respawn
#umask {{/*umask*/}}
nice {{.Nice}}
chroot {{.Chroot}}
chdir {{.Chdir}}
#limit core <softlimit> <hardlimit>
#limit cpu <softlimit> <hardlimit>
#limit data <softlimit> <hardlimit>
#limit fsize <softlimit> <hardlimit>
#limit memlock <softlimit> <hardlimit>
#limit msgqueue <softlimit> <hardlimit>
#limit nice <softlimit> <hardlimit>
#limit nofile <softlimit> <hardlimit>
#limit nproc <softlimit> <hardlimit>
#limit rss <softlimit> <hardlimit>
#limit rtprio <softlimit> <hardlimit>
#limit sigpending <softlimit> <hardlimit>
#limit stack <softlimit> <hardlimit>
{{if .Credential.User}}setuid {{.Credential.User}}{{end}}
{{if .Credential.Group}}setgid {{.Credential.Group}}{{end}}

# log stdout/stderr to /var/log/upstart/
console log

{{if .PreStart}}
pre-start script
  {{.PreStart}}

  status=$?
  if [ "$status" -gt 0 ] ; then
    echo "PreStart command failed with code $status."

    # Per init(5) docs, simply calling 'stop' will abort this start.
    stop
  fi
end script
{{end}}

exec {{.Program}} {{range .Args}}{{. | shell_quote}}{{end}}
